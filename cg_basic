1 イントロダクション
CGとは画面を構成する「画素」の色を決定することである
    自分のプログラムで計算
    ある程度は既存のライブラリを活用する
OpenGLライブラリ
    フラフィックライブラリ
GLUTライブラリ
OpenGLの基本：図形の描画
    glColor3d( , , ,); //色を指定
    glBegin(GL_  ); //何を描画するのか指定
     glVertex2d( , ) //頂点の指示
     glVertex2d( , ) //頂点の指示
    glEnd();
描画するものの指定
    GL_POINTS:　点
    GL_LINES: 線
    GL_LINE_STRIP:　折れ線
    GL_LINE_LOOP: 多角形
    GL_TRIANGLES:　三角形
    GL_QUADS: 四角形

2 二次元の座標変換
座標変換
    ある物体の位置，向き，形を変える
        拡大・縮小　glScaled(sx, sy, 1.0); //z座標は変化させない場合
        回転移動　glRotated(theta, 0, 0, 1.0); //回転角度，回転軸ベクトル
線形変換
    直線を直線に移す変換・原点の位置は変化しない変換
        回転
        スケーリング
        せん断
    平行移動　glTranslated(tx, ty, 0);
アフィン変換
    線形変換＋平行移動
    便宜上一つ次元を上げたベクトルを利用する
    複数解の座標変換操作が単純な行列の積の繰り返しだけですむ
様々な変換
    鏡映変換
    原点以外の点を中心とした回転
        平行移動→回転移動→平行移動(逆行列)
変換行列の操作
    glLoadIdentity();
        変換行列を初期化する
        描画更新をするたびに初期化が必要
変換行列の格納(Push)と取り出し(Pop)
    ある時点での座標変換行列を保存しておき，あとでまたその行列を取り出す
    行列スタックを使用　後入れ先出し